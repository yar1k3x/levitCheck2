{"ast":null,"code":"function Validation(values) {\n  //alert(\"\")\n  let error = {};\n  const number_pattern = /^\\+\\d{11,14}$/;\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const password_pattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/;\n\n  // Валидация имени\n  if (values.name === \"\") {\n    error.name = \"Имя не может быть пустым\";\n  } else {\n    error.name = \"\";\n  }\n\n  // Валидация номера телефона\n  if (values.phone === \"\") {\n    error.phone = \"Номер не может быть пустым!\";\n  } else if (!number_pattern.test(values.phone)) {\n    error.phone = \"Номер не подходит\";\n  } else {\n    error.phone = \"\";\n  }\n\n  // Валидация адреса электронной почты\n  if (values.email === \"\") {\n    error.email = \"Адрес эл. почты не может быть пустым\";\n  } else if (!email_pattern.test(values.email)) {\n    error.email = \"Адрес эл. почты не подходит\";\n  } else {\n    error.email = \"\";\n  }\n\n  // Валидация пароля\n  if (values.password === \"\") {\n    error.password = \"Пароль не может быть пустым\";\n  } else if (!password_pattern.test(values.password)) {\n    error.password = \"Пароль не подходит\";\n  } else {\n    error.password = \"\";\n  }\n  return error;\n}\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","values","error","number_pattern","email_pattern","password_pattern","name","phone","test","email","password","_c","$RefreshReg$"],"sources":["/Users/a1/new app/frontend/src/SignUpValidation.js"],"sourcesContent":["function Validation(values) {\n    //alert(\"\")\n    let error = {}\n    const number_pattern = /^\\+\\d{11,14}$/\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    const password_pattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/;\n\n    // Валидация имени\n    if (values.name === \"\") {\n        error.name = \"Имя не может быть пустым\"\n    }\n    else {\n        error.name = \"\"\n    }\n\n    // Валидация номера телефона\n    if (values.phone === \"\") {\n        error.phone = \"Номер не может быть пустым!\"\n    }\n    else if (!number_pattern.test(values.phone)) {\n        error.phone = \"Номер не подходит\"\n    }\n    else {\n        error.phone = \"\"\n    }\n\n    // Валидация адреса электронной почты\n    if (values.email === \"\") {\n        error.email = \"Адрес эл. почты не может быть пустым\"\n    }\n    else if (!email_pattern.test(values.email)) {\n        error.email = \"Адрес эл. почты не подходит\"\n    }\n    else {\n        error.email = \"\"\n    }\n\n    // Валидация пароля\n    if (values.password === \"\") {\n        error.password = \"Пароль не может быть пустым\"\n    }\n    else if (!password_pattern.test(values.password)) {\n        error.password = \"Пароль не подходит\"\n    }\n    else {\n        error.password = \"\"\n    }\n\n    return error;\n\n}\n\nexport default Validation"],"mappings":"AAAA,SAASA,UAAUA,CAACC,MAAM,EAAE;EACxB;EACA,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,MAAMC,cAAc,GAAG,eAAe;EACtC,MAAMC,aAAa,GAAG,4BAA4B;EAClD,MAAMC,gBAAgB,GAAG,gDAAgD;;EAEzE;EACA,IAAIJ,MAAM,CAACK,IAAI,KAAK,EAAE,EAAE;IACpBJ,KAAK,CAACI,IAAI,GAAG,0BAA0B;EAC3C,CAAC,MACI;IACDJ,KAAK,CAACI,IAAI,GAAG,EAAE;EACnB;;EAEA;EACA,IAAIL,MAAM,CAACM,KAAK,KAAK,EAAE,EAAE;IACrBL,KAAK,CAACK,KAAK,GAAG,6BAA6B;EAC/C,CAAC,MACI,IAAI,CAACJ,cAAc,CAACK,IAAI,CAACP,MAAM,CAACM,KAAK,CAAC,EAAE;IACzCL,KAAK,CAACK,KAAK,GAAG,mBAAmB;EACrC,CAAC,MACI;IACDL,KAAK,CAACK,KAAK,GAAG,EAAE;EACpB;;EAEA;EACA,IAAIN,MAAM,CAACQ,KAAK,KAAK,EAAE,EAAE;IACrBP,KAAK,CAACO,KAAK,GAAG,sCAAsC;EACxD,CAAC,MACI,IAAI,CAACL,aAAa,CAACI,IAAI,CAACP,MAAM,CAACQ,KAAK,CAAC,EAAE;IACxCP,KAAK,CAACO,KAAK,GAAG,6BAA6B;EAC/C,CAAC,MACI;IACDP,KAAK,CAACO,KAAK,GAAG,EAAE;EACpB;;EAEA;EACA,IAAIR,MAAM,CAACS,QAAQ,KAAK,EAAE,EAAE;IACxBR,KAAK,CAACQ,QAAQ,GAAG,6BAA6B;EAClD,CAAC,MACI,IAAI,CAACL,gBAAgB,CAACG,IAAI,CAACP,MAAM,CAACS,QAAQ,CAAC,EAAE;IAC9CR,KAAK,CAACQ,QAAQ,GAAG,oBAAoB;EACzC,CAAC,MACI;IACDR,KAAK,CAACQ,QAAQ,GAAG,EAAE;EACvB;EAEA,OAAOR,KAAK;AAEhB;AAACS,EAAA,GAlDQX,UAAU;AAoDnB,eAAeA,UAAU;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}