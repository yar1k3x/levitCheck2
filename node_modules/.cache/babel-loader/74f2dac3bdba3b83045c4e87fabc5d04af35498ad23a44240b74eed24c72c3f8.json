{"ast":null,"code":"var _jsxFileName = \"/Users/a1/new app/frontend/src/shop-context.js\",\n  _s = $RefreshSig$();\n// // shop-context.js\n// import React, { createContext, useState } from 'react';\n\n// export const ShopContext = createContext(null);\n\n// export const ShopContextProvider = ({ children }) => {\n//   const [cart, setCart] = useState({});\n\n//   const addToCart = (productId) => {\n//     setCart((prevCart) => {\n//       const updatedCart = { ...prevCart };\n//       updatedCart[productId] = (updatedCart[productId] || 0) + 1;\n//       return updatedCart;\n//     });\n//   };\n\n//   const removeFromCart = (productId) => {\n//     setCart((prevCart) => {\n//       const updatedCart = { ...prevCart };\n//       if (updatedCart[productId] > 0) {\n//         updatedCart[productId] -= 1;\n//       }\n//       return updatedCart;\n//     });\n//   };\n\n//   const getTotalItemsInCart = () => {\n//     let total = 0;\n//     for (const quantity of Object.values(cart)) {\n//       total += quantity;\n//     }\n//     return total;\n//   };\n\n//   return (\n//     <ShopContext.Provider value={{ cart, addToCart, removeFromCart, getTotalItemsInCart }}>\n//       {children}\n//     </ShopContext.Provider>\n//   );\n// };\n\n// shop-context.js\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nexport const ShopContextProvider = props => {\n  _s();\n  const [cartItems, setCartItems] = useState({});\n  const [products, setProducts] = useState([]);\n  const addToCart = productId => {\n    setCartItems(prev => {\n      const updatedCart = {\n        ...prev\n      };\n      updatedCart[productId] = (updatedCart[productId] || 0) + 1;\n      return updatedCart;\n    });\n  };\n  const removeFromCart = productId => {\n    setCartItems(prev => {\n      const updatedCart = {\n        ...prev\n      };\n      if (updatedCart[productId] > 0) {\n        updatedCart[productId] -= 1;\n      }\n      return updatedCart;\n    });\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const productId in cartItems) {\n      const quantity = cartItems[productId];\n      const product = products.find(p => p.id === Number(productId));\n      if (product) {\n        totalAmount += quantity * product.price;\n      }\n    }\n    return totalAmount;\n  };\n  const contextValue = {\n    cartItems,\n    products,\n    addToCart,\n    removeFromCart,\n    getTotalCartAmount\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopContextProvider, \"J0pj2tQ7kI2tjiVvZp5jwgVCOxs=\");\n_c = ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","ShopContext","ShopContextProvider","props","_s","cartItems","setCartItems","products","setProducts","addToCart","productId","prev","updatedCart","removeFromCart","getTotalCartAmount","totalAmount","quantity","product","find","p","id","Number","price","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/a1/new app/frontend/src/shop-context.js"],"sourcesContent":["// // shop-context.js\n// import React, { createContext, useState } from 'react';\n\n// export const ShopContext = createContext(null);\n\n// export const ShopContextProvider = ({ children }) => {\n//   const [cart, setCart] = useState({});\n\n//   const addToCart = (productId) => {\n//     setCart((prevCart) => {\n//       const updatedCart = { ...prevCart };\n//       updatedCart[productId] = (updatedCart[productId] || 0) + 1;\n//       return updatedCart;\n//     });\n//   };\n\n//   const removeFromCart = (productId) => {\n//     setCart((prevCart) => {\n//       const updatedCart = { ...prevCart };\n//       if (updatedCart[productId] > 0) {\n//         updatedCart[productId] -= 1;\n//       }\n//       return updatedCart;\n//     });\n//   };\n\n//   const getTotalItemsInCart = () => {\n//     let total = 0;\n//     for (const quantity of Object.values(cart)) {\n//       total += quantity;\n//     }\n//     return total;\n//   };\n\n//   return (\n//     <ShopContext.Provider value={{ cart, addToCart, removeFromCart, getTotalItemsInCart }}>\n//       {children}\n//     </ShopContext.Provider>\n//   );\n// };\n\n\n\n// shop-context.js\nimport React, { createContext, useState } from 'react';\n\nexport const ShopContext = createContext(null);\n\nexport const ShopContextProvider = (props) => {\n  const [cartItems, setCartItems] = useState({});\n  const [products, setProducts] = useState([]);\n\n  const addToCart = (productId) => {\n    setCartItems((prev) => {\n      const updatedCart = { ...prev };\n      updatedCart[productId] = (updatedCart[productId] || 0) + 1;\n      return updatedCart;\n    });\n  };\n\n  const removeFromCart = (productId) => {\n    setCartItems((prev) => {\n      const updatedCart = { ...prev };\n      if (updatedCart[productId] > 0) {\n        updatedCart[productId] -= 1;\n      }\n      return updatedCart;\n    });\n  };\n\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const productId in cartItems) {\n      const quantity = cartItems[productId];\n      const product = products.find((p) => p.id === Number(productId));\n      if (product) {\n        totalAmount += quantity * product.price;\n      }\n    }\n    return totalAmount;\n  };\n\n  const contextValue = {\n    cartItems,\n    products,\n    addToCart,\n    removeFromCart,\n    getTotalCartAmount,\n  };\n\n  return (\n    <ShopContext.Provider value={contextValue}>\n      {props.children}\n    </ShopContext.Provider>\n  );\n};\n"],"mappings":";;AAAA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,IAAI,CAAC;AAE9C,OAAO,MAAMK,mBAAmB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,SAAS,GAAIC,SAAS,IAAK;IAC/BJ,YAAY,CAAEK,IAAI,IAAK;MACrB,MAAMC,WAAW,GAAG;QAAE,GAAGD;MAAK,CAAC;MAC/BC,WAAW,CAACF,SAAS,CAAC,GAAG,CAACE,WAAW,CAACF,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;MAC1D,OAAOE,WAAW;IACpB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,cAAc,GAAIH,SAAS,IAAK;IACpCJ,YAAY,CAAEK,IAAI,IAAK;MACrB,MAAMC,WAAW,GAAG;QAAE,GAAGD;MAAK,CAAC;MAC/B,IAAIC,WAAW,CAACF,SAAS,CAAC,GAAG,CAAC,EAAE;QAC9BE,WAAW,CAACF,SAAS,CAAC,IAAI,CAAC;MAC7B;MACA,OAAOE,WAAW;IACpB,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIC,WAAW,GAAG,CAAC;IACnB,KAAK,MAAML,SAAS,IAAIL,SAAS,EAAE;MACjC,MAAMW,QAAQ,GAAGX,SAAS,CAACK,SAAS,CAAC;MACrC,MAAMO,OAAO,GAAGV,QAAQ,CAACW,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKC,MAAM,CAACX,SAAS,CAAC,CAAC;MAChE,IAAIO,OAAO,EAAE;QACXF,WAAW,IAAIC,QAAQ,GAAGC,OAAO,CAACK,KAAK;MACzC;IACF;IACA,OAAOP,WAAW;EACpB,CAAC;EAED,MAAMQ,YAAY,GAAG;IACnBlB,SAAS;IACTE,QAAQ;IACRE,SAAS;IACTI,cAAc;IACdC;EACF,CAAC;EAED,oBACEd,OAAA,CAACC,WAAW,CAACuB,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAG,QAAA,EACvCvB,KAAK,CAACuB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAAC1B,EAAA,CA/CWF,mBAAmB;AAAA6B,EAAA,GAAnB7B,mBAAmB;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}