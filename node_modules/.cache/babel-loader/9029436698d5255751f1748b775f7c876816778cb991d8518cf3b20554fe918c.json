{"ast":null,"code":"function Validation(values) {\n  //alert(\"\")\n  let error = {};\n  const number_pattern = /^\\+\\d{11,14}$/;\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const password_pattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/;\n\n  // Валидация имени\n  if (values.name === \"\") {\n    error.name = \"Имя не может быть пустым\";\n  }\n\n  // Валидация номера телефона\n  if (values.number === \"\") {\n    error.phone = \"Номер не может быть пустым!\";\n  }\n  if (!number_pattern.test(values.number)) {\n    error.phone = \"Номер не подходит\";\n  }\n\n  // Валидация адреса электронной почты\n  if (values.email === \"\") {\n    error.email = \"Адрес эл. почты не может быть пустым\";\n  } else if (!email_pattern.test(values.email)) {\n    error.email = \"Адрес эл. почты не подходит\";\n  } else {\n    error.email = \"\";\n  }\n\n  // Валидация пароля\n  if (values.password === \"\") {\n    error.password = \"Пароль не может быть пустым\";\n  } else if (!password_pattern.test(values.password)) {\n    error.password = \"Пароль не подходит\";\n  } else {\n    error.password = \"\";\n  }\n  return error;\n}\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","values","error","number_pattern","email_pattern","password_pattern","name","number","phone","test","email","password","_c","$RefreshReg$"],"sources":["/Users/a1/new app/frontend/src/SignUpValidation.js"],"sourcesContent":["function Validation(values) {\n    //alert(\"\")\n    let error = {}\n    const number_pattern = /^\\+\\d{11,14}$/\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    const password_pattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/;\n\n    // Валидация имени\n    if (values.name === \"\") {\n        error.name = \"Имя не может быть пустым\"\n    }\n\n    // Валидация номера телефона\n    if (values.number === \"\") {\n        error.phone = \"Номер не может быть пустым!\"\n    }\n    if (!number_pattern.test(values.number)) {\n        error.phone = \"Номер не подходит\"\n    }\n\n    // Валидация адреса электронной почты\n    if (values.email === \"\") {\n        error.email = \"Адрес эл. почты не может быть пустым\"\n    }\n    else if (!email_pattern.test(values.email)) {\n        error.email = \"Адрес эл. почты не подходит\"\n    }\n    else {\n        error.email = \"\"\n    }\n\n    // Валидация пароля\n    if (values.password === \"\") {\n        error.password = \"Пароль не может быть пустым\"\n    }\n    else if (!password_pattern.test(values.password)) {\n        error.password = \"Пароль не подходит\"\n    }\n    else {\n        error.password = \"\"\n    }\n\n    return error;\n\n}\n\nexport default Validation"],"mappings":"AAAA,SAASA,UAAUA,CAACC,MAAM,EAAE;EACxB;EACA,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,MAAMC,cAAc,GAAG,eAAe;EACtC,MAAMC,aAAa,GAAG,4BAA4B;EAClD,MAAMC,gBAAgB,GAAG,gDAAgD;;EAEzE;EACA,IAAIJ,MAAM,CAACK,IAAI,KAAK,EAAE,EAAE;IACpBJ,KAAK,CAACI,IAAI,GAAG,0BAA0B;EAC3C;;EAEA;EACA,IAAIL,MAAM,CAACM,MAAM,KAAK,EAAE,EAAE;IACtBL,KAAK,CAACM,KAAK,GAAG,6BAA6B;EAC/C;EACA,IAAI,CAACL,cAAc,CAACM,IAAI,CAACR,MAAM,CAACM,MAAM,CAAC,EAAE;IACrCL,KAAK,CAACM,KAAK,GAAG,mBAAmB;EACrC;;EAEA;EACA,IAAIP,MAAM,CAACS,KAAK,KAAK,EAAE,EAAE;IACrBR,KAAK,CAACQ,KAAK,GAAG,sCAAsC;EACxD,CAAC,MACI,IAAI,CAACN,aAAa,CAACK,IAAI,CAACR,MAAM,CAACS,KAAK,CAAC,EAAE;IACxCR,KAAK,CAACQ,KAAK,GAAG,6BAA6B;EAC/C,CAAC,MACI;IACDR,KAAK,CAACQ,KAAK,GAAG,EAAE;EACpB;;EAEA;EACA,IAAIT,MAAM,CAACU,QAAQ,KAAK,EAAE,EAAE;IACxBT,KAAK,CAACS,QAAQ,GAAG,6BAA6B;EAClD,CAAC,MACI,IAAI,CAACN,gBAAgB,CAACI,IAAI,CAACR,MAAM,CAACU,QAAQ,CAAC,EAAE;IAC9CT,KAAK,CAACS,QAAQ,GAAG,oBAAoB;EACzC,CAAC,MACI;IACDT,KAAK,CAACS,QAAQ,GAAG,EAAE;EACvB;EAEA,OAAOT,KAAK;AAEhB;AAACU,EAAA,GA5CQZ,UAAU;AA8CnB,eAAeA,UAAU;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}